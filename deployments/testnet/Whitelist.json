{
  "address": "0xA8B500b5bd857aB66Bd9D953d4DD33c14fe12b57",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "added",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AddedOrRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "users",
          "type": "address[]"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x45db08ce8aa046235596cf7b8703ecf1fbffd30b7a82f8ee8d778f5ff545b33d",
  "receipt": {
    "to": null,
    "from": "0x41026DbcCBF3e2868d1c41cbE025778D0Ada82Ad",
    "contractAddress": "0xA8B500b5bd857aB66Bd9D953d4DD33c14fe12b57",
    "transactionIndex": 16,
    "gasUsed": "713965",
    "logsBloom": "0x
    "blockHash": "0xfebe1ac75ba3b569e502013756e9bcc8aa9fbb214dc8a91fbf4b37e33ade71d8",
    "transactionHash": "0x45db08ce8aa046235596cf7b8703ecf1fbffd30b7a82f8ee8d778f5ff545b33d",
    "logs": [],
    "blockNumber": 22236292,
    "cumulativeGasUsed": "2629450",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c85fbc875089d1f1fa11272c19d5367e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"added\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AddedOrRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addToWhitelist(address[])\":{\"details\":\"Only owner can do this operation\",\"params\":{\"users\":\"List of user data\"}},\"isWhitelisted(address)\":{\"params\":{\"_user\":\"user wallet address\"},\"returns\":{\"_0\":\"user wallet, kyc status, max allocation\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromWhitelist(address[])\":{\"details\":\"Only owner can do this operation\",\"params\":{\"addrs\":\"addresses to be removed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddedOrRemoved(bool,address,uint256)\":{\"notice\":\"An event emitted when a user is added or removed. True: Added, False: Removed\"}},\"kind\":\"user\",\"methods\":{\"addToWhitelist(address[])\":{\"notice\":\"Add users to white list\"},\"isWhitelisted(address)\":{\"notice\":\"Return whitelisted user info\"},\"removeFromWhitelist(address[])\":{\"notice\":\"Remove from white lsit\"},\"totalUsers()\":{\"notice\":\"Count of users participating in whitelisting\"},\"usersCount()\":{\"notice\":\"Return the number of users\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\"},\"contracts/Whitelist.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ncontract Whitelist is Initializable, OwnableUpgradeable {\\n  /// @notice Count of users participating in whitelisting\\n  uint256 public totalUsers;\\n\\n  // Users list\\n  address[] internal userlist;\\n  mapping(address => uint256) internal indexOf;\\n  mapping(address => bool) internal inserted;\\n\\n  /// @notice An event emitted when a user is added or removed. True: Added, False: Removed\\n  event AddedOrRemoved(bool added, address indexed user, uint256 timestamp);\\n\\n  function initialize() external initializer {\\n    __Ownable_init();\\n  }\\n\\n  /**\\n   * @notice Return the number of users\\n   */\\n  function usersCount() external view returns (uint256) {\\n    return userlist.length;\\n  }\\n\\n  /**\\n   * @notice Add users to white list\\n   * @dev Only owner can do this operation\\n   * @param users List of user data\\n   */\\n  function addToWhitelist(address[] memory users) external onlyOwner {\\n    for (uint256 i = 0; i < users.length; i++) {\\n      address user = users[i];\\n\\n      if (inserted[user] == false) {\\n        inserted[user] = true;\\n        indexOf[user] = userlist.length;\\n        userlist.push(user);\\n      }\\n\\n      emit AddedOrRemoved(true, user, block.timestamp);\\n    }\\n    totalUsers = userlist.length;\\n  }\\n\\n  /**\\n   * @notice Remove from white lsit\\n   * @dev Only owner can do this operation\\n   * @param addrs addresses to be removed\\n   */\\n  function removeFromWhitelist(address[] memory addrs) external onlyOwner {\\n    for (uint256 i = 0; i < addrs.length; i++) {\\n      // Ignore for non-existing users\\n      if (inserted[addrs[i]] == true) {\\n        delete inserted[addrs[i]];\\n\\n        uint256 index = indexOf[addrs[i]];\\n        uint256 lastIndex = userlist.length - 1;\\n        address lastUser = userlist[lastIndex];\\n\\n        indexOf[lastUser] = index;\\n        delete indexOf[addrs[i]];\\n\\n        userlist[index] = lastUser;\\n        userlist.pop();\\n\\n        emit AddedOrRemoved(false, addrs[i], block.timestamp);\\n      }\\n    }\\n    totalUsers = userlist.length;\\n  }\\n\\n  /**\\n   * @notice Return whitelisted user info\\n   * @param _user user wallet address\\n   * @return user wallet, kyc status, max allocation\\n   */\\n  function isWhitelisted(address _user) external view returns (bool) {\\n    return inserted[_user];\\n  }\\n}\\n\",\"keccak256\":\"0xaed8879f1db8da9049584f81fd2a1016706cd9dbaaea099c9b520e7ca6115fc0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610bf6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80637f649783116100765780638da5cb5b1161005b5780638da5cb5b14610133578063bff1f9e11461014e578063f2fde38b1461015757600080fd5b80637f649783146101185780638129fc1c1461012b57600080fd5b80633af32abf146100a8578063548db174146100e95780636ba13a82146100fe578063715018a614610110575b600080fd5b6100d46100b6366004610a4f565b6001600160a01b031660009081526068602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100fc6100f7366004610a87565b61016a565b005b6066545b6040519081526020016100e0565b6100fc610451565b6100fc610126366004610a87565b6104b7565b6100fc610638565b6033546040516001600160a01b0390911681526020016100e0565b61010260655481565b6100fc610165366004610a4f565b6106f3565b6033546001600160a01b031633146101c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60005b815181101561044757606860008383815181106101eb576101eb610b4c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16151560011415610435576068600083838151811061023257610232610b4c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81549060ff021916905560006067600084848151811061028257610282610b4c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020549050600060016066805490506102c19190610b78565b90506000606682815481106102d8576102d8610b4c565b60009182526020808320909101546001600160a01b031680835260679182905260408320869055875190935090919087908790811061031957610319610b4c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009055806066848154811061035957610359610b4c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606680548061039857610398610b8f565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff1916905501905584518590859081106103db576103db610b4c565b60200260200101516001600160a01b03167f574ebc15cd9bc486c18008b681e2e624d3d932ef71db527ae9669e2d9e06527c6000426040516104299291909115158252602082015260400190565b60405180910390a25050505b8061043f81610ba5565b9150506101cc565b5050606654606555565b6033546001600160a01b031633146104ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c0565b6104b560006107ce565b565b6033546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c0565b60005b815181101561044757600082828151811061053157610531610b4c565b6020908102919091018101516001600160a01b0381166000908152606890925260409091205490915060ff166105e1576001600160a01b0381166000818152606860209081526040808320805460ff19166001908117909155606680546067909452918420839055820181559091527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435401805473ffffffffffffffffffffffffffffffffffffffff191690911790555b60408051600181524260208201526001600160a01b038316917f574ebc15cd9bc486c18008b681e2e624d3d932ef71db527ae9669e2d9e06527c910160405180910390a2508061063081610ba5565b915050610514565b600054610100900460ff1680610651575060005460ff16155b6106b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff161580156106d6576000805461ffff19166101011790555b6106de61082d565b80156106f0576000805461ff00191690555b50565b6033546001600160a01b0316331461074d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c0565b6001600160a01b0381166107c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101c0565b6106f0815b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610846575060005460ff16155b6108a95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff161580156108cb576000805461ffff19166101011790555b6108d36108db565b6106de61098c565b600054610100900460ff16806108f4575060005460ff16155b6109575760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff161580156106de576000805461ffff191661010117905580156106f0576000805461ff001916905550565b600054610100900460ff16806109a5575060005460ff16155b610a085760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff16158015610a2a576000805461ffff19166101011790555b6106de336107ce565b80356001600160a01b0381168114610a4a57600080fd5b919050565b600060208284031215610a6157600080fd5b610a6a82610a33565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610a9a57600080fd5b823567ffffffffffffffff80821115610ab257600080fd5b818501915085601f830112610ac657600080fd5b813581811115610ad857610ad8610a71565b8060051b604051601f19603f83011681018181108582111715610afd57610afd610a71565b604052918252848201925083810185019188831115610b1b57600080fd5b938501935b82851015610b4057610b3185610a33565b84529385019392850192610b20565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610b8a57610b8a610b62565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600019821415610bb957610bb9610b62565b506001019056fea26469706673582212204168dd81dba9a80e63f17aa74ef8dc4b603af0e06f1f8c7282c468c03ae5182064736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80637f649783116100765780638da5cb5b1161005b5780638da5cb5b14610133578063bff1f9e11461014e578063f2fde38b1461015757600080fd5b80637f649783146101185780638129fc1c1461012b57600080fd5b80633af32abf146100a8578063548db174146100e95780636ba13a82146100fe578063715018a614610110575b600080fd5b6100d46100b6366004610a4f565b6001600160a01b031660009081526068602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100fc6100f7366004610a87565b61016a565b005b6066545b6040519081526020016100e0565b6100fc610451565b6100fc610126366004610a87565b6104b7565b6100fc610638565b6033546040516001600160a01b0390911681526020016100e0565b61010260655481565b6100fc610165366004610a4f565b6106f3565b6033546001600160a01b031633146101c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60005b815181101561044757606860008383815181106101eb576101eb610b4c565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16151560011415610435576068600083838151811061023257610232610b4c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81549060ff021916905560006067600084848151811061028257610282610b4c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020549050600060016066805490506102c19190610b78565b90506000606682815481106102d8576102d8610b4c565b60009182526020808320909101546001600160a01b031680835260679182905260408320869055875190935090919087908790811061031957610319610b4c565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060009055806066848154811061035957610359610b4c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606680548061039857610398610b8f565b6000828152602090208101600019908101805473ffffffffffffffffffffffffffffffffffffffff1916905501905584518590859081106103db576103db610b4c565b60200260200101516001600160a01b03167f574ebc15cd9bc486c18008b681e2e624d3d932ef71db527ae9669e2d9e06527c6000426040516104299291909115158252602082015260400190565b60405180910390a25050505b8061043f81610ba5565b9150506101cc565b5050606654606555565b6033546001600160a01b031633146104ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c0565b6104b560006107ce565b565b6033546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c0565b60005b815181101561044757600082828151811061053157610531610b4c565b6020908102919091018101516001600160a01b0381166000908152606890925260409091205490915060ff166105e1576001600160a01b0381166000818152606860209081526040808320805460ff19166001908117909155606680546067909452918420839055820181559091527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435401805473ffffffffffffffffffffffffffffffffffffffff191690911790555b60408051600181524260208201526001600160a01b038316917f574ebc15cd9bc486c18008b681e2e624d3d932ef71db527ae9669e2d9e06527c910160405180910390a2508061063081610ba5565b915050610514565b600054610100900460ff1680610651575060005460ff16155b6106b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff161580156106d6576000805461ffff19166101011790555b6106de61082d565b80156106f0576000805461ff00191690555b50565b6033546001600160a01b0316331461074d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c0565b6001600160a01b0381166107c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101c0565b6106f0815b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610846575060005460ff16155b6108a95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff161580156108cb576000805461ffff19166101011790555b6108d36108db565b6106de61098c565b600054610100900460ff16806108f4575060005460ff16155b6109575760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff161580156106de576000805461ffff191661010117905580156106f0576000805461ff001916905550565b600054610100900460ff16806109a5575060005460ff16155b610a085760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff16158015610a2a576000805461ffff19166101011790555b6106de336107ce565b80356001600160a01b0381168114610a4a57600080fd5b919050565b600060208284031215610a6157600080fd5b610a6a82610a33565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610a9a57600080fd5b823567ffffffffffffffff80821115610ab257600080fd5b818501915085601f830112610ac657600080fd5b813581811115610ad857610ad8610a71565b8060051b604051601f19603f83011681018181108582111715610afd57610afd610a71565b604052918252848201925083810185019188831115610b1b57600080fd5b938501935b82851015610b4057610b3185610a33565b84529385019392850192610b20565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610b8a57610b8a610b62565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600019821415610bb957610bb9610b62565b506001019056fea26469706673582212204168dd81dba9a80e63f17aa74ef8dc4b603af0e06f1f8c7282c468c03ae5182064736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addToWhitelist(address[])": {
        "details": "Only owner can do this operation",
        "params": {
          "users": "List of user data"
        }
      },
      "isWhitelisted(address)": {
        "params": {
          "_user": "user wallet address"
        },
        "returns": {
          "_0": "user wallet, kyc status, max allocation"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeFromWhitelist(address[])": {
        "details": "Only owner can do this operation",
        "params": {
          "addrs": "addresses to be removed"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "AddedOrRemoved(bool,address,uint256)": {
        "notice": "An event emitted when a user is added or removed. True: Added, False: Removed"
      }
    },
    "kind": "user",
    "methods": {
      "addToWhitelist(address[])": {
        "notice": "Add users to white list"
      },
      "isWhitelisted(address)": {
        "notice": "Return whitelisted user info"
      },
      "removeFromWhitelist(address[])": {
        "notice": "Remove from white lsit"
      },
      "totalUsers()": {
        "notice": "Count of users participating in whitelisting"
      },
      "usersCount()": {
        "notice": "Return the number of users"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 133,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 758,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5410,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "totalUsers",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 5413,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "userlist",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 5417,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "indexOf",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5421,
        "contract": "contracts/Whitelist.sol:Whitelist",
        "label": "inserted",
        "offset": 0,
        "slot": "104",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}